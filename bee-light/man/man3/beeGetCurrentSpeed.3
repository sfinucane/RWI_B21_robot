.TH BEEGETCURRENTSPEED 3 "April 2, 1999" "BeeSoft Light" "BeeSoft Light"
.SH NAME
beeGetCurrentSpeed \- provide current speed of a BeeSoft Light robot

.SH SYNOPSIS
.B #include <bee.h>

.BI "robot_speed* beeGetCurrentSpeed();"

.SH DESCRIPTION
.B "beeGetCurrentSpeed()"
provides current speed of a BeeSoft Light robot. The speed is 
defined as the data structure:
 
.BI " typedef struct { "

.BI "		float " trans_speed "; 

.BI "		float " rot_speed ";

.BI "} robot_speed ;"

After the user process executes 
.BR "beeInitialize()",
it will keep updating the current speed in private variables.
The operations are running in a separate thread and running concurrently
with user process.
Then user process can get the up-to-second data every time it invokes
.BR "beeGetCurrentSpeed()".


.SH "RETURN VALUE"
On success, the function will return a location value which points
to a data structure defined as 
.BR "robot_speed".
On error, NULL is returned. 
  
.SH NOTES
The function hides the details of the message pass among 
BeeSoft Light servers. However, you should at least run 
.B "tcxServer" 
and
.B "colliServer" 
first. Your shell should set environment variable 
.B "TCXHOST" 
to the host name which run 
.BR "tcxServer". 
You should also invoke function 
.B "beeInitialize()" 
before 
.B "beeGetCurrentSpeed()" 
function in your program. Otherwise, the function will return NULL.


.SH SEE ALSO
.BR "beeInitialize" (3).


